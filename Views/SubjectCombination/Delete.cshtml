@model SubjectCombination

@{
    ViewData["Title"] = "Delete Subject Combination";
}

<div class="form-container shadow p-4 bg-white rounded">
    <h1 class="h4 text-info mb-3"><i class="bi bi-layers me-2"></i>Delete Subject Combination</h1>
    <hr class="mb-4" />

    <div class="card-body">
        <h5 class="card-title text-primary fw-semibold">
            <i class="bi bi-layers me-2"></i>@Model.Name
        </h5>

        <p class="mb-1 text-muted">
            <i class="bi bi-journal-code me-1"></i> <strong>Programme:</strong> @Model.Programme?.Name
        </p>

        <p class="mb-1 text-muted">
            <i class="bi bi-clock-history me-1"></i> <strong>Year:</strong> @Model.Programme?.Year?.Name
        </p>

        <p class="mb-1 text-muted">
            <i class="bi bi-people-fill me-1"></i> <strong>Students:</strong>
            @if (Model.NumberOfStudents == 0)
            {
                <span class="badge bg-secondary">Not Provided</span>
            }
            else
            {
                <span class="badge bg-light text-dark">@Model.NumberOfStudents</span>
            }
        </p>

        @if (Model.DepartmentSubjectCombinations?.Any() == true)
        {
            <p class="mb-0 text-muted">
                <i class="bi bi-building me-1"></i> <strong>Departments:</strong>
                @foreach (var dep in Model.DepartmentSubjectCombinations)
                {
                    <span class="badge bg-secondary me-1">@dep.Department?.Name</span>
                }
            </p>
        }
    </div>

    <hr class="mb-4" />

    <form asp-action="Delete">
        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
        <input type="hidden" asp-for="SubjectCombinationId" />

        <div class="form-group mt-4 d-flex justify-content-start">
            <input type="submit" value="Confirm" class="btn btn-danger px-4 me-2" />
            <a asp-action="Index" class="btn btn-outline-secondary">Cancel</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
